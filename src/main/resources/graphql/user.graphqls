type User {
    id: ID!
    workUserId: String
    name: String
    mail: String
}

type UserToken {
    token: String
    expiresIn: Long
}

input UserInput {
    id: ID
    workUserId: String
    name: String
    mail: String
    password: String
}

extend type Query {
    getUserById(id: ID!): User
    getAllUser: [User]
    getCurrentUser: User
    getUserToken(user: UserInput): UserToken
}

extend type Mutation {
    addUser(user: UserInput): User
    updateUser(user: UserInput): User
    deleteUserById(id: ID!): Response
}
